name: Build and Release

on:
  push:
    branches:
      - installer-script
  pull_request:
    branches:
      - installer-script

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./electron-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20" # Specify the Node.js version based on your requirements

      - name: Install dependencies
        run: npm install

      - name: Build and Publish
        run: npm run release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.run_number }}" # Use a unique tag name
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
          body: "Description of the release goes here"

      - name: Get Release Asset Path
        id: get_asset_path
        run: |
          asset_path=$(find ./dist -type f -name '*.AppImage')
          echo "asset_path=$asset_path" >> $GITHUB_ENV
          echo "asset_name=$(basename $asset_path)" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.asset_path }} # Uses the dynamically found file path
          asset_name: ${{ env.asset_name }} # Uses the dynamically set asset name
          asset_content_type: application/octet-stream
