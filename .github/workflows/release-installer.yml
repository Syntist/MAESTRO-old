name: Installer Builder

on:
  push:
    branches:
      - installer-script
  pull_request:
    branches:
      - installer-script

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Install Nuitka
        run: |
          python -m pip install --upgrade pip
          python -m pip install nuitka

      - name: Build Standalone Installer
        run: |
          python -m nuitka installer.py --standalone --onefile

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.run_number }}" # Use a unique tag name
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
          body: "Automated release of the standalone installer."

      - name: Get Release Asset Path
        id: get_asset_path
        run: |
          asset_path=$(find . -type f -name 'installer*') # Adjust the pattern to match your output file
          echo "asset_path=$asset_path" >> $GITHUB_ENV
          echo "asset_name=$(basename $asset_path)" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.asset_path }}
          asset_name: ${{ env.asset_name }}
          asset_content_type: application/octet-stream